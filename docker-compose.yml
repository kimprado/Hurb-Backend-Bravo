version: '3.3'
volumes:
  redisdb:
services:
  api:
    build:
      context: '${PWD}'
      dockerfile: '${PWD}/Dockerfile.package'
    env_file: '${PWD}/configs/config.env'
    ports: 
      - 3000:3000
    depends_on:
      - redisdb
  api-safe:
    build:
      context: '${PWD}'
      dockerfile: '${PWD}/Dockerfile.package-safe'
    env_file: '${PWD}/configs/config.env'
    ports: 
      - 3000:3000
    depends_on:
      - redisdb
  redisdb:
    image: redis:4.0.11-alpine3.8 
    command: redis-server --appendonly yes
    volumes:
      - redisdb:/data
    ports: 
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 3
  redis-test:
    image: redis:4.0.11-alpine3.8 
    command: redis-server
    ports: 
      - 6380:6379
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 3
  test-unit:
    build: .
    command: make test-unit
    volumes:
      - .:/src
  test-integration:
    build: .
    command: make test-integration
    volumes:
      - .:/src
      - ./configs/config-integration-container.json:/src/configs/config-integration.json
    depends_on:
      - redis-test
  test-all:
    build: .
    command: make test-all
    volumes:
      - .:/src
      - ./configs/config-integration-container.json:/src/configs/config-integration.json
    depends_on:
      - redis-test
  test-envvars:
    build: .
    command: make test-envvars
    volumes:
      - .:/src
